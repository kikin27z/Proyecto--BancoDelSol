/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package bancodelsol;

import bancodelsoldominio.Cuenta;
import bancodelsolpersistencia.daos.IRetiroDAO;
import bancodelsolpersistencia.daos.ITransaccionDAO;
import bancodelsolpersistencia.daos.RetiroDAO;
import bancodelsolpersistencia.daos.TransaccionDAO;
import bancodelsolpersistencia.excepciones.PersistenciaException;

/**
 * Panel que muestra la confirmación de un retiro. Permite al usuario confirmar
 * el retiro de dinero asociado a una cuenta. Muestra información sobre el
 * retiro, incluyendo el monto, el folio y la contraseña necesarios. Permite al
 * usuario aceptar el retiro, lo cual ejecuta la transacción en la base de
 * datos. Si la transacción se ejecuta correctamente, cambia la vista para
 * mostrar los datos del registro del retiro. Si ocurre un error durante la
 * ejecución de la transacción, muestra un mensaje de advertencia en la ventana.
 * La validez del retiro se controla mediante la variable de instancia "valido".
 *
 * @author José Karim Franco Valencia - 245138
 * @author Jesús Roberto García Armenta - 244913
 */
public class VistaCofirmarRetiro extends javax.swing.JPanel {

    Cuenta cuenta;
    private final IRetiroDAO retiroDAO;
    private final ITransaccionDAO transaccionDAO;
    private final Ventana ventana;
    boolean valido;

    /**
     * Crea un nuevo panel de VistaGenerarRetiro.
     *
     * @param ventana la ventana de enlace
     */
    public VistaCofirmarRetiro(Ventana ventana) {
        this.ventana = ventana;
        cuenta = ventana.getCuenta();
        this.retiroDAO = new RetiroDAO(ventana.getConexion());
        this.transaccionDAO = new TransaccionDAO(ventana.getConexion());
        initComponents();
        setText();
        valido = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblConfirmar = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();
        lblMonto = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();
        lblInfo1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblConfirmar.setFont(new java.awt.Font("Amazon Ember", 1, 40)); // NOI18N
        lblConfirmar.setForeground(new java.awt.Color(143, 143, 143));
        lblConfirmar.setText("Confirmar");
        add(lblConfirmar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));

        lblInfo.setFont(new java.awt.Font("Amazon Ember Light", 0, 20)); // NOI18N
        lblInfo.setForeground(new java.awt.Color(33, 33, 33));
        lblInfo.setText("jLabel1");
        add(lblInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, -1, -1));

        lblMonto.setFont(new java.awt.Font("Amazon Ember", 1, 40)); // NOI18N
        lblMonto.setForeground(new java.awt.Color(180, 154, 102));
        lblMonto.setText("(Monto)");
        add(lblMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, -1, -1));

        btnAceptar.setBackground(new java.awt.Color(180, 154, 102));
        btnAceptar.setFont(new java.awt.Font("Amazon Ember", 0, 20)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(253, 253, 253));
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, 140, 50));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgConfirmarRetiroSinCuenta.png"))); // NOI18N
        add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        lblInfo1.setFont(new java.awt.Font("Amazon Ember Light", 0, 20)); // NOI18N
        lblInfo1.setForeground(new java.awt.Color(33, 33, 33));
        lblInfo1.setText("jLabel1");
        add(lblInfo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Ejecuta la transacción de retiro y cambia la vista si la operación es
     * válida. Si la transacción se realiza correctamente (indicado por la
     * variable "valido" que se establece en el método ejecutarRetiro()), cambia
     * la vista de la ventana para mostrar los datos del registro del retiro. Si
     * la transacción no es válida, la vista no cambia y no se realiza ninguna
     * acción adicional.
     *
     * @param evt El evento de acción del botón "Aceptar".
     */
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        ejecutarRetiro();
        if (valido) {
            ventana.cambiarVistaMostrarDatosRegistro();
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * Ejecuta la transacción de retiro en la base de datos utilizando el ID de
     * cuenta, el folio y la contraseña. Si la transacción se realiza
     * correctamente, establece "valido" como true. Si ocurre un error durante
     * la transacción, muestra un mensaje de advertencia en la ventana.
     */
    public void ejecutarRetiro() {
        try {
            transaccionDAO.generarRetiroSinCuenta(ventana.getCuenta().getIdCuenta(), ventana.getRetiro().getFolio(), ventana.getRetiro().getContrasena(), ventana.getRetiro().getMonto());
            ventana.getCuenta().setSaldo(ventana.getCuenta().getSaldo() - ventana.getRetiro().getMonto());
            valido = true;
        } catch (PersistenciaException ex) {
            ventana.mostrarAviso(ex.getMessage());
        }
    }

    public void setText() {
        lblInfo.setText("""
                        <html><p>El folio y contrase\u00f1a necesarios para retirar<br>
                        el dinero se mostrar\u00e1n a continuaci\u00f3n y<br>
                        tienen un vencimiento de 10 minutos</p></html>""");
        String numeroFormateado = String.format("%.2f", ventana.getRetiro().getMonto());
        lblMonto.setText("$" + numeroFormateado + " MXN");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel lblConfirmar;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblInfo1;
    private javax.swing.JLabel lblMonto;
    // End of variables declaration//GEN-END:variables
}
