package bancodelsol;

import bancodelsoldominio.Cliente;
import bancodelsoldominio.Transaccion;
import bancodelsolpersistencia.daos.TransaccionDAO;
import bancodelsolpersistencia.excepciones.PersistenciaException;
import java.awt.Color;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.table.DefaultTableModel;


/**
 * 
 * @author José Karim Franco Valencia - 245138
 * @author Jesús Roberto García Armenta - 244913
 */
public class VistaHistorial extends javax.swing.JPanel {

    private Ventana ventana;
    private Cliente clienteActual;
    private DefaultTableModel modeloTabla;
    private List<Transaccion> listaTransacciones;
    private boolean fechaValida;

    /**
     * Constructor de la clase VistaHistorial.
     *
     * @param ventana La ventana principal de la aplicación.
     */
    public VistaHistorial(Ventana ventana) {
        this.ventana = ventana;
        this.clienteActual = ventana.getCliente();
        initComponents();
        limpiarTabla();
        desactivarTextoFechas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        cbxTipoOperaciones = new javax.swing.JComboBox<>();
        iconAjustes = new javax.swing.JLabel();
        btnInicio = new javax.swing.JButton();
        iconInicio = new javax.swing.JLabel();
        btnPerfil = new javax.swing.JButton();
        iconPerfil = new javax.swing.JLabel();
        btnHistorial = new javax.swing.JButton();
        iconHistorial = new javax.swing.JLabel();
        btnCerrarSesion = new javax.swing.JButton();
        iconCerrarSesion = new javax.swing.JLabel();
        iconLogo = new javax.swing.JLabel();
        btnLimpiarFiltros = new javax.swing.JButton();
        btnFiltrar = new javax.swing.JButton();
        lblFiltroTipo = new javax.swing.JLabel();
        lblFiltroPeriodo = new javax.swing.JLabel();
        lblOperacionInfo2 = new javax.swing.JLabel();
        lblOperacionInfo3 = new javax.swing.JLabel();
        jdcFechaDesde = new com.toedter.calendar.JDateChooser();
        jdcFechaHasta = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTransacciones = new javax.swing.JTable();
        fondo = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitulo.setFont(new java.awt.Font("Amazon Ember", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(149, 120, 64));
        lblTitulo.setText("Historial de operaciones");
        add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 420, 43));

        cbxTipoOperaciones.setFont(new java.awt.Font("Amazon Ember Light", 0, 18)); // NOI18N
        cbxTipoOperaciones.setForeground(new java.awt.Color(157, 134, 90));
        cbxTipoOperaciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Transferencias", "Retiros" }));
        cbxTipoOperaciones.setFocusable(false);
        add(cbxTipoOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 143, 235, 36));

        iconAjustes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconAjustes.png"))); // NOI18N
        add(iconAjustes, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 10, 35, 35));

        btnInicio.setBorderPainted(false);
        btnInicio.setContentAreaFilled(false);
        btnInicio.setFocusPainted(false);
        btnInicio.setFocusable(false);
        btnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioActionPerformed(evt);
            }
        });
        add(btnInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 58, 35, 35));

        iconInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconInicio.png"))); // NOI18N
        add(iconInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 58, 35, 35));

        btnPerfil.setBorderPainted(false);
        btnPerfil.setContentAreaFilled(false);
        btnPerfil.setFocusPainted(false);
        btnPerfil.setFocusable(false);
        btnPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerfilActionPerformed(evt);
            }
        });
        add(btnPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 111, 35, 35));

        iconPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconPerfil.png"))); // NOI18N
        add(iconPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 111, 35, 35));

        btnHistorial.setBorderPainted(false);
        btnHistorial.setContentAreaFilled(false);
        btnHistorial.setFocusPainted(false);
        btnHistorial.setFocusable(false);
        btnHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistorialActionPerformed(evt);
            }
        });
        add(btnHistorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 164, 35, 35));

        iconHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconHistorial.png"))); // NOI18N
        add(iconHistorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 164, 35, 35));

        btnCerrarSesion.setBorderPainted(false);
        btnCerrarSesion.setContentAreaFilled(false);
        btnCerrarSesion.setFocusPainted(false);
        btnCerrarSesion.setFocusable(false);
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        add(btnCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 213, 35, 35));

        iconCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconCerrarSesion.png"))); // NOI18N
        add(iconCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 213, 35, 35));

        iconLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconLogo.png"))); // NOI18N
        add(iconLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 538, 35, 35));

        btnLimpiarFiltros.setBackground(new java.awt.Color(143, 143, 143));
        btnLimpiarFiltros.setFont(new java.awt.Font("Amazon Ember", 0, 18)); // NOI18N
        btnLimpiarFiltros.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiarFiltros.setText("Limpiar filtros");
        btnLimpiarFiltros.setBorderPainted(false);
        btnLimpiarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarFiltrosActionPerformed(evt);
            }
        });
        add(btnLimpiarFiltros, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 160, 45));

        btnFiltrar.setBackground(new java.awt.Color(143, 143, 143));
        btnFiltrar.setFont(new java.awt.Font("Amazon Ember", 0, 18)); // NOI18N
        btnFiltrar.setForeground(new java.awt.Color(255, 255, 255));
        btnFiltrar.setText("Filtrar");
        btnFiltrar.setBorderPainted(false);
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });
        add(btnFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, 150, 45));

        lblFiltroTipo.setFont(new java.awt.Font("Amazon Ember", 0, 24)); // NOI18N
        lblFiltroTipo.setForeground(new java.awt.Color(143, 143, 143));
        lblFiltroTipo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFiltroTipo.setText("Filtrar por tipo:");
        add(lblFiltroTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 104, 184, -1));

        lblFiltroPeriodo.setFont(new java.awt.Font("Amazon Ember", 0, 24)); // NOI18N
        lblFiltroPeriodo.setForeground(new java.awt.Color(143, 143, 143));
        lblFiltroPeriodo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFiltroPeriodo.setText("Filtrar por periodo:");
        add(lblFiltroPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 104, 220, -1));

        lblOperacionInfo2.setFont(new java.awt.Font("Amazon Ember", 0, 20)); // NOI18N
        lblOperacionInfo2.setForeground(new java.awt.Color(143, 143, 143));
        lblOperacionInfo2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblOperacionInfo2.setText("Desde:");
        add(lblOperacionInfo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 147, -1, -1));

        lblOperacionInfo3.setFont(new java.awt.Font("Amazon Ember", 0, 20)); // NOI18N
        lblOperacionInfo3.setForeground(new java.awt.Color(143, 143, 143));
        lblOperacionInfo3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblOperacionInfo3.setText("Hasta:");
        add(lblOperacionInfo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(636, 147, -1, -1));

        jdcFechaDesde.setForeground(new java.awt.Color(149, 120, 64));
        jdcFechaDesde.setToolTipText("");
        jdcFechaDesde.setFont(new java.awt.Font("Amazon Ember Light", 0, 20)); // NOI18N
        jdcFechaDesde.setMaxSelectableDate(new java.util.Date(253370793714000L));
        jdcFechaDesde.setMinSelectableDate(new java.util.Date(-62135740686000L));
        add(jdcFechaDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 143, 166, 36));

        jdcFechaHasta.setForeground(new java.awt.Color(149, 120, 64));
        jdcFechaHasta.setFont(new java.awt.Font("Amazon Ember Light", 0, 20)); // NOI18N
        jdcFechaHasta.setMaxSelectableDate(new java.util.Date(253370793714000L));
        jdcFechaHasta.setMinSelectableDate(new java.util.Date(-62135740686000L));
        add(jdcFechaHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 143, 166, 36));

        jTransacciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tipo operación", "Fecha y hora", "Monto", "Motivo", "Cuenta destino", "Estado retiro", "Folio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTransacciones);
        if (jTransacciones.getColumnModel().getColumnCount() > 0) {
            jTransacciones.getColumnModel().getColumn(0).setResizable(false);
            jTransacciones.getColumnModel().getColumn(1).setResizable(false);
            jTransacciones.getColumnModel().getColumn(2).setResizable(false);
            jTransacciones.getColumnModel().getColumn(3).setResizable(false);
            jTransacciones.getColumnModel().getColumn(4).setResizable(false);
            jTransacciones.getColumnModel().getColumn(5).setResizable(false);
            jTransacciones.getColumnModel().getColumn(6).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 810, 300));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgVistaHistorial.png"))); // NOI18N
        fondo.setToolTipText("");
        add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 580));
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Cambia la vista actual a la vista principal del cliente.
    *
    * @param evt El evento de acción que desencadena este método.
    */
    private void btnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioActionPerformed
        ventana.cambiarVistaCliente();
    }//GEN-LAST:event_btnInicioActionPerformed
    
    /**
    * Cambia la vista del perfil del cliente.
    *
    * @param evt El evento de acción que desencadena este método.
    */
    private void btnPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerfilActionPerformed
        ventana.cambiarVistaEditarPerfil();
    }//GEN-LAST:event_btnPerfilActionPerformed

    /**
    * Cambia la vista del historial de operaciones totales.
    *
    * @param evt El evento de acción que desencadena este método.
    */
    private void btnHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistorialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHistorialActionPerformed

    /**
    * Cambia la vista actual a la pantalla de inicio del banco.
    *
    * @param evt El evento de acción que desencadena este método.
    */
    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        if(ventana.mostrarConfirmacion("¿Seguro que querer cerrar sesión?", "Cerrar sesión")){
            ventana.setCliente(null);
            ventana.setCuenta(null);
            ventana.cambiarVistaInicio();
        }
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void btnLimpiarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarFiltrosActionPerformed
        // TODO add your handling code here:
        System.out.println(cbxTipoOperaciones.getSelectedIndex());
        cbxTipoOperaciones.setSelectedIndex(0);
        jdcFechaDesde.setDate(null);
        jdcFechaHasta.setDate(null);
        
        
    }//GEN-LAST:event_btnLimpiarFiltrosActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        if (jdcFechaDesde.getDate() != null && jdcFechaHasta.getDate() != null) {
            if(validaPeriodo()){
                System.out.println("\n\n\n\nTabla por periodo");
                crearTablaPeriodo();
            }else{
                ventana.mostrarAviso("La fecha desde debe ser antes o el mismo dia que hasta");
            }
        }else{
            crearTabla();
        }
        
    }//GEN-LAST:event_btnFiltrarActionPerformed
    
    
    private void crearTabla() {
            limpiarTabla();
            TransaccionDAO transaccionDAO = new TransaccionDAO(ventana.getConexion());
            try {
                transaccionDAO.crearTabla(modeloTabla,clienteActual.getIdCliente(),cbxTipoOperaciones.getSelectedIndex());
            } catch (PersistenciaException ex) {
                Logger.getLogger(VistaHistorial.class.getName()).log(Level.SEVERE, null, ex);
            }

    }
    private void crearTablaPeriodo() {
            limpiarTabla();
            
            TransaccionDAO transaccionDAO = new TransaccionDAO(ventana.getConexion());
            try {
                transaccionDAO.creaTablaConPeriodo(modeloTabla,jdcFechaDesde.getDate().toString(),jdcFechaHasta.getDate().toString(),clienteActual.getIdCliente(),cbxTipoOperaciones.getSelectedIndex());
            } catch (PersistenciaException ex) {
                Logger.getLogger(VistaHistorial.class.getName()).log(Level.SEVERE, null, ex);
            }

    }
    
    private void limpiarTabla(){
         modeloTabla = (DefaultTableModel) jTransacciones.getModel();
            if (modeloTabla.getRowCount() > 0) {
                for (int i = modeloTabla.getRowCount() - 1; i > -1; i--) {
                    modeloTabla.removeRow(i);
                }
            }
    }
    
    
    
    private boolean validaPeriodo(){
        java.sql.Date fechaDesdeJ = new java.sql.Date(jdcFechaDesde.getDate().getTime());
        java.sql.Date fechaHastaJ = new java.sql.Date(jdcFechaHasta.getDate().getTime());
        
        String [] fechaDesdeCadena = fechaDesdeJ.toString().split("-");
        String [] fechaHastaCadena = fechaHastaJ.toString().split("-");
        
        int[] fechaDesde = new int[3];
        int[] fechaHasta = new int[3];
        
        for (int i = 0; i < 3; i++) {
            fechaDesde[i] = Integer.parseInt(fechaDesdeCadena[i]);
            fechaHasta[i] = Integer.parseInt(fechaHastaCadena[i]);
            
            System.out.println(fechaHasta[i]);
        }
       
        if(fechaDesde[0] <= fechaHasta[0]){
            if(fechaDesde[1] <= fechaHasta[1]){
                if(fechaDesde[2] <= fechaHasta[2]){
                    return true;
                }
            }
        }
        return false;         
    }
    
    
    private void desactivarTextoFechas(){
        JFormattedTextField textField = ((JFormattedTextField) jdcFechaDesde.getDateEditor().getUiComponent());
        JFormattedTextField textField2 = ((JFormattedTextField) jdcFechaHasta.getDateEditor().getUiComponent());
        textField.setBackground(new Color(253, 253, 253));
        textField.setForeground(new Color(0,0,0));
        textField2.setBackground(new Color(253, 253, 253));
        textField2.setForeground(new Color(0,0,0));
        // Deshabilitar la edición del campo de texto
        textField.setEditable(false);
        textField2.setEditable(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnHistorial;
    private javax.swing.JButton btnInicio;
    private javax.swing.JButton btnLimpiarFiltros;
    private javax.swing.JButton btnPerfil;
    private javax.swing.JComboBox<String> cbxTipoOperaciones;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel iconAjustes;
    private javax.swing.JLabel iconCerrarSesion;
    private javax.swing.JLabel iconHistorial;
    private javax.swing.JLabel iconInicio;
    private javax.swing.JLabel iconLogo;
    private javax.swing.JLabel iconPerfil;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTransacciones;
    private com.toedter.calendar.JDateChooser jdcFechaDesde;
    private com.toedter.calendar.JDateChooser jdcFechaHasta;
    private javax.swing.JLabel lblFiltroPeriodo;
    private javax.swing.JLabel lblFiltroTipo;
    private javax.swing.JLabel lblOperacionInfo2;
    private javax.swing.JLabel lblOperacionInfo3;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
