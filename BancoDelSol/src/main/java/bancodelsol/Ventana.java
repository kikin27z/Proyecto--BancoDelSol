package bancodelsol;

import bancodelsol.dtos.ClienteNuevoDTO;
import bancodelsol.dtos.DomicilioNuevoDTO;
import bancodelsoldominio.Cliente;
import bancodelsolpersistencia.conexion.IConexion;
import bancodelsolpersistencia.excepciones.ValidacionDTOException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author karim
 */
public class Ventana extends javax.swing.JFrame {

    private Cliente cliente;
    private ClienteNuevoDTO clienteDTO;
    private DomicilioNuevoDTO domicilioDTO;
    private JPanel panelActual;
    private IConexion conexion;
    /**
     * Creates new form Ventana
     */
    public Ventana(IConexion conexion) {
        this.conexion = conexion;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 580));
        setMinimumSize(new java.awt.Dimension(1000, 580));
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public void cambiarVistaInicio() {
        limpiarFrame();
        VistaInicio vistaInicio = new VistaInicio(this);
        ponerEnJFrame(vistaInicio);
        panelActual = vistaInicio;
    }

    public void cambiarVistaCliente() {
        limpiarFrame();
        VistaCliente vistaClienta = new VistaCliente(this);
        ponerEnJFrame(vistaClienta);
        panelActual = vistaClienta;
    }

    public void cambiarVistaCuenta(Long idCuenta) {

        VistaCuenta vistaCuenta = new VistaCuenta(this, idCuenta);

        this.add(vistaCuenta);
        vistaCuenta.setBounds(0, 0, 1000, 580);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    public void cambiarVistaTransferir(Long idCuenta) {
        this.limpiarFrame();
        VistaTransferir vistaTransferencia = new VistaTransferir(this, idCuenta);
        ponerEnJFrame(vistaTransferencia);
        panelActual = vistaTransferencia;
    }

    public void limpiarFrame() {
        if (panelActual != null) {
            this.remove(panelActual);
            panelActual = null;
        }
    }

    public void cambiarVistaInicioSesion() {
        limpiarFrame();
        VistaInicioSesion vistaInicioSesion = new VistaInicioSesion(this);
        ponerEnJFrame(vistaInicioSesion);
        panelActual = vistaInicioSesion;
    }

    public void cambiarVistaRegistro() {
        this.clienteDTO = new ClienteNuevoDTO();
        this.domicilioDTO = new DomicilioNuevoDTO();
        cambiarVistaRegistrarse();
    }

    public void cambiarVistaRegistrarse() {
        limpiarFrame();
        VistaRegistro vistaRegistro = new VistaRegistro(this);
        ponerEnJFrame(vistaRegistro);
        panelActual = vistaRegistro;
    }

    public void cambiarVistaRegistrarse2() {
        limpiarFrame();
        VistaRegistro2 vistaRegistro = new VistaRegistro2(this);
        ponerEnJFrame(vistaRegistro);
        panelActual = vistaRegistro;
    }

    public void cambiarVistaRegistrarse3() {
        limpiarFrame();
        VistaRegistro3 vistaRegistro = new VistaRegistro3(this);
        ponerEnJFrame(vistaRegistro);
        panelActual = vistaRegistro;
    }

    

    public void ponerEnJFrame(JPanel panel) {
        this.add(panel);
        panel.setBounds(0, 0, 1000, 580);
        this.setLocationRelativeTo(null);
        this.pack();  // Ajustar el tamaño automáticamente
    }

    public ClienteNuevoDTO getClienteDTO() {
        return clienteDTO;
    }

    public void setClienteDTO(ClienteNuevoDTO clienteDTO) {
        this.clienteDTO = clienteDTO;
    }

    public DomicilioNuevoDTO getDomicilioDTO() {
        return domicilioDTO;
    }

    public void setDomicilioDTO(DomicilioNuevoDTO domicilioDTO) {
        this.domicilioDTO = domicilioDTO;
    }
    
    public void mostrarAviso(String mensaje){
        JOptionPane.showMessageDialog(this, mensaje,"Aviso", JOptionPane.WARNING_MESSAGE);
    }
    public boolean mostrarConfirmacion(String mensaje, String titulo){
        int respuesta = JOptionPane.showConfirmDialog(null, mensaje, titulo, JOptionPane.OK_CANCEL_OPTION);
        return respuesta == JOptionPane.OK_OPTION;
    }
    
    public void mostrarInformacion(String mensaje, String titulo){
        JOptionPane.showMessageDialog(this, mensaje, titulo, JOptionPane.INFORMATION_MESSAGE);
    }

    public IConexion getConexion() {
        return conexion;
    }
    
    
}
